name: 'Cypress Test'

# concurrency:
#   group: pr-workflow-${{ github.ref }}
#   cancel-in-progress: true

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

env:
  SERVICE: kyberswap-interface

jobs:
  prepare:
    runs-on: ubuntu-20.04
    outputs:
      current_branch: ${{ steps.current_branch.outputs.value }}
      head_sha: ${{ github.event.pull_request.head.sha }}
      image_name: 'asia.gcr.io/kyber-operation/core/${{ env.SERVICE }}'
      image_tag: ${{ steps.get_tag.outputs.image_tag }}
      repository: ${{ github.repository	}}
      pr_number: ${{github.event.number}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch
        shell: bash
        id: current_branch
        run: |
          if [[ ! "${{ github.ref }}"  = "refs/tags/"* ]]; then
            if [[ "${{ github.event_name }}" = "pull_request" ]]; then
              HEAD_REF=$(printf "%q" "${{ github.head_ref }}")
              HEAD_REF=${HEAD_REF/refs\/heads\//}
              BRANCH=$HEAD_REF
            else
              REF=$(printf "%q" "${{ github.ref }}")
              REF_BRANCH=${REF/refs\/pull\//}
              REF_BRANCH=${REF_BRANCH/refs\/heads\//}
              BRANCH=$REF_BRANCH
            fi
          else
            REF=$(printf "%q" "${{ github.ref }}")
            REF_BRANCH=${REF/refs\/tags\//}
            BRANCH=$REF_BRANCH
          fi
          echo "::set-output name=value::$BRANCH"

      - name: Extract GitHub HEAD SHA
        id: head_sha
        run: echo "::set-output name=value::$(git rev-parse HEAD)"

      - name: Get Docker image tag
        id: get_tag
        env:
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          short_sha="$(echo $HEAD_SHA | head -c7)"
          echo "::set-output name=image_tag::adpr-$short_sha"

  cypress-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        resolution: ['high']
    needs:
      - prepare

    steps:
        - name: Check out Git repository
          uses: actions/checkout@v2
  
        - name: Set up Node.js 18.15.0
          uses: actions/setup-node@v1
          with:
            node-version: 18.15.0
            registry-url: 'https://npm.pkg.github.com'
            scope: '@kybernetwork'
  
        - name: Install dependences
          uses: bahmutov/npm-install@HEAD
          env:
            NODE_AUTH_TOKEN: ${{ secrets.GH_PAT }} ### authen npm
  
        - name: Set up QEMU
          uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v1
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pin@v1
  
        - name: Cache Docker layers
          uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # pin@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-
  
        - name: Run e2e tests (${{ matrix.resolution }} res)
          run: |
            docker-compose -f docker-compose.ci.yml --env-file ${{ matrix.resolution }}-res.env up --build --exit-code-from synpress
          env:
            COMPOSE_DOCKER_CLI_BUILD: 1
            DOCKER_BUILDKIT: 1
            DOCKER_DEFAULT_PLATFORM: linux/amd64
            NGROK_AUTH: ${{ secrets.NGROK_AUTH }}
            NGROK_BASIC_AUTH: ${{ secrets.NGROK_BASIC_AUTH }}
            CYPRESS_PRIVATE_KEY_WITH_FUNDS:
              ${{ secrets.CYPRESS_PRIVATE_KEY_WITH_FUNDS }}
            ANVIL_FORK_URL: ${{ secrets.ANVIL_FORK_URL }}
            GH_PAT: ${{ secrets.GH_PAT }}
            GH_USERNAME: ${{ secrets.GH_USERNAME }}
      
  
        - name: Archive e2e artifacts (${{ matrix.resolution }} res)
          uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v2
          if: always()
          with:
            name: e2e-artifacts-${{ matrix.resolution }}-res
            path: |
              docker/videos
              docker/videos-ci
              docker/screenshots
          continue-on-error: true      